Understanding Bubble SortManually sort the array ` [5, 2, 8, 1, 3] ` using the bubble sort technique. writedown each step of the process.

Original Array: [5, 2, 8, 1, 3]

Step 1:

Compare 5 and 2 (5 > 2), so swap them.
Updated Array: [2, 5, 8, 1, 3]

Compare 5 and 8 (5 < 8), no swap needed.
Array remains: [2, 5, 8, 1, 3]

Compare 8 and 1 (8 > 1), so swap them.
Updated Array: [2, 5, 1, 8, 3]

Compare 8 and 3 (8 > 3), so swap them.
Updated Array: [2, 5, 1, 3, 8]

Step 2:

Array after Step 1: [2, 5, 1, 3, 8]

Compare 2 and 5 (2 < 5), no swap needed.
Array remains: [2, 5, 1, 3, 8]

Compare 5 and 1 (5 > 1), so swap them.
Updated Array: [2, 1, 5, 3, 8]

Compare 5 and 3 (5 > 3), so swap them.
Updated Array: [2, 1, 3, 5, 8]

Compare 5 and 8 (5 < 8), no swap needed.
Array remains: [2, 1, 3, 5, 8]

Step 3:

Array after Step 2: [2, 1, 3, 5, 8]

Compare 2 and 1 (2 > 1), so swap them.
Updated Array: [1, 2, 3, 5, 8]

Compare 2 and 3 (2 < 3), no swap needed.
Array remains: [1, 2, 3, 5, 8]

Compare 3 and 5 (3 < 5), no swap needed.
Array remains: [1, 2, 3, 5, 8]

Compare 5 and 8 (5 < 8), no swap needed.
Array remains: [1, 2, 3, 5, 8]

Step 4:

Array after Step 3: [1, 2, 3, 5, 8]

At this point, the array is already sorted. No more swaps are needed.

So, after four steps, the sorted array is [1, 2, 3, 5, 8].




